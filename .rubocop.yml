---
require:
  - rubocop-rspec
  - rubocop-rails

RSpec:
  Language:
    ExampleGroups:
      Regular:
        # Standard Groupings
        - describe
        - context
        - feature
        - example_group

    Includes:
      Examples:
        - "run_test!"
        - it_behaves_like

AllCops:
  TargetRubyVersion: 3.0
  RubyInterpreters:
    - ruby
    - rake
  Include:
    - "*.rb"
    - "*.jbuilder"
    - "*.gemfile"
    - "*.gemspec"
    - "*.rake"
    - "*.ru"
    - "*.ruby"
    - "*.spec"
    - "*.thor"
    - ".irbrc"
    - "Fastfile"
    - "*Fastfile"
    - "Gemfile"
    - "Guardfile"
    - "Rakefile"
    - "Thorfile"
  Exclude:
    - "vendor/**/*"
    - ".git/**/*"
    - "tmp/**/*"
  DefaultFormatter: progress
  DisplayCopNames: true
  NewCops: enable

Bundler/GemFilename:
  EnforcedStyle: "gems.rb"

Layout/ClassStructure:
  Enabled: true
  ExpectedOrder:
    - module_inclusion
    - constants
    - association
    - public_attribute_macros
    - public_delegate
    - macros
    - class_methods
    - initializer
    - public_methods
    - protected_attribute_macros
    - protected_methods
    - private_attribute_macros
    - private_delegate
    - private_methods
  Categories:
    association:
      - has_many
      - has_one
      - belongs_to
    attribute_macros:
      - attr_accessor
      - attr_reader
      - attr_writer
      - attribute
      - enum
    macros:
      - validates
      - validate
    module_inclusion:
      - include
      - prepend
      - extend

Layout/FirstMethodArgumentLineBreak:
  Enabled: true

Layout/LineLength:
  Max: 150 # default 80

Layout/MultilineArrayLineBreaks:
  Enabled: true

Layout/MultilineAssignmentLayout:
  Enabled: true
  EnforcedStyle: "same_line"

Layout/MultilineHashKeyLineBreaks:
  Enabled: true

Metrics/AbcSize:
  Max: 61 # default 15

Metrics/BlockLength:
  Exclude:
    - "spec/**/*" # declarative DSL -> different conventions
    - "config/routes.rb" # declarative DSL -> different conventions
    - "db/migrate/*"
    - "config/environments/**"

Metrics/ClassLength:
  Max: 190 # default 100

Metrics/CyclomaticComplexity:
  Max: 15 # default 7

Metrics/MethodLength:
  Max: 48 # default 10
  Exclude:
    - "db/migrate/*"

Metrics/PerceivedComplexity:
  Max: 15 # default 7

Rails:
  Enabled: true
  TargetRailsVersion: 6

Rails/SkipsModelValidations:
  Exclude:
    - backend/db/migrate/**/*

Rails/DynamicFindBy:
  Whitelist:
    - find_by_invitation_token

RSpec/ExampleLength:
  Max: 28 # default 5

RSpec/MultipleExpectations:
  Enabled: false # aggregate examples supersede this

RSpec/MultipleMemoizedHelpers:
  Max: 13 # default 5

RSpec/NestedGroups:
  Max: 5 # RSwag: describe -> path -> http method -> response code -> context

RSpec/VariableName:
  IgnoredPatterns:
    - Authorization

Style/AutoResourceCleanup:
  Enabled: true

Style/CollectionMethods:
  Enabled: true

Style/DateTime:
  Enabled: true

Style/Documentation:
  Enabled: false

Style/ImplicitRuntimeError:
  Enabled: true

Style/IpAddresses:
  Enabled: true

Style/TrailingCommaInArguments:
  Description: "Checks for trailing comma in argument lists."
  StyleGuide: "#no-trailing-params-comma"
  Enabled: true
  # If `comma`, the cop requires a comma after the last argument, but only for
  # parenthesized method calls where each argument is on its own line.
  # If `consistent_comma`, the cop requires a comma after the last argument,
  # for all parenthesized method calls with arguments.
  EnforcedStyleForMultiline: comma
  SupportedStylesForMultiline:
    - comma
    - consistent_comma
    - no_comma

Style/TrailingCommaInArrayLiteral:
  Description: "Checks for trailing comma in array literals."
  StyleGuide: "#no-trailing-array-commas"
  Enabled: true
  # but only when each item is on its own line.
  # If `consistent_comma`, the cop requires a comma after the last item of all
  # non-empty array literals.
  EnforcedStyleForMultiline: comma
  SupportedStylesForMultiline:
    - comma
    - consistent_comma
    - no_comma

Style/TrailingCommaInHashLiteral:
  Description: "Checks for trailing comma in hash literals."
  Enabled: true
  # If `comma`, the cop requires a comma after the last item in a hash,
  # but only when each item is on its own line.
  # If `consistent_comma`, the cop requires a comma after the last item of all
  # non-empty hash literals.
  EnforcedStyleForMultiline: comma
  SupportedStylesForMultiline:
    - comma
    - consistent_comma
    - no_comma
